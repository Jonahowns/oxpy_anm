For Variable Masses, the CUDA implementation stores the values by btype.
This was the easiest solution I could come up with without making a CUDA map implementation (seems a bit overkill),
I instead now have the btypes of proteins going from 5->26
To add another mass to the program, simply add on to the default mass file
The next btype must be 27 and continue ascending. The reason for this is the provided btype is an index in an array
holding the mass values as c_number.

0 1 //A DNA
1 1 //C
2 1 //G
3 1 //T
4 1 // N_DUMMY
5 1 // A Amino Acids
6 1 // R
7 1 // N
8 1 // D
9 1 // C
10 1 // E
11 1 // Q
12 1 // G
13 1 // H
14 1 // I
15 1 // L
16 1 // K
17 1 // M
18 1 // F
19 1 // P
20 1 // S
21 1 // T
22 1 // W
23 1 // Y
24 1 // V
25 1 // A_DUMMY
26 1 // A_INVALID
27 0.52 // ex. addition
28 159 // ex. addition

Save Your Mass File and set massfile = (massfile) in the input file
It is a backend optional parameter

Then set btype (& type typically) in your topology reading function

No comments Allowed on the actual file, here is the default file

27
0 1
1 1
2 1
3 1
4 1
5 1
7 1
6 1
8 1
9 1
10 1
11 1
12 1
13 1
14 1
15 1
16 1
17 1
18 1
19 1
20 1
21 1
22 1
23 1
24 1
25 1
26 1

27 // number of different mass values
0 1 //A
1 1 //C
2 1 //G
3 1 //T
4 1 // N_DUMMY
5 1 // A Amino Acids
6 1 // R
7 1 // N
8 1 // D
9 1 // C
10 1 // E
11 1 // Q
12 1 // G
13 1 // H
14 1 // I
15 1 // L
16 1 // K
17 1 // M
18 1 // F
19 1 // P
20 1 // S
21 1 // T
22 1 // W
23 1 // Y
24 1 // V
25 1 // A_DUMMY
26 1 // A_INVALID
